/*
 * Qiskit Runtime API
 *
 * The Qiskit Runtime API description
 *
 * The version of the OpenAPI document: 0.25.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// NoiseLearnerInput : The input for a NoiseLearner API call
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct NoiseLearnerInput {
    /// The circuits on which to perform noise learning.
    #[serde(rename = "circuits")]
    pub circuits: Vec<serde_json::Value>,
    #[serde(rename = "options", skip_serializing_if = "Option::is_none")]
    pub options: Option<Box<models::NoiseLearnerInputOptions>>,
    /// For NoiseLearner, should always be 2
    #[serde(rename = "version", skip_serializing_if = "Option::is_none")]
    pub version: Option<Version>,
}

impl NoiseLearnerInput {
    /// The input for a NoiseLearner API call
    pub fn new(circuits: Vec<serde_json::Value>) -> NoiseLearnerInput {
        NoiseLearnerInput {
            circuits,
            options: None,
            version: None,
        }
    }
}
/// For NoiseLearner, should always be 2
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Version {
    #[serde(rename = "2")]
    Variant2,
}

impl Default for Version {
    fn default() -> Version {
        Self::Variant2
    }
}
